{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_FUND",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_Owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xac8b786ac8909d7cfefa9d6a4c8a77a38c3bb7479ef58a1ce094a4bc44b9a77d",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "848141",
    "logsBloom": "0x
    "blockHash": "0x2815783b32c888f606503210b84ee2c05f22bc8c5336b58c2a48125bf62bbadb",
    "transactionHash": "0xac8b786ac8909d7cfefa9d6a4c8a77a38c3bb7479ef58a1ce094a4bc44b9a77d",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "848141",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "67cffe3ce018aec9e9931c6197ab52d9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_FUND\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_Owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Send funds to contract\\r\\n// Withdraw funds from contract\\r\\n// Fix minimum value of fund to send to contract\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\n// 822,736\\r\\n// 800,890\\r\\nerror NotOwner();\\r\\n\\r\\ncontract FundMe {\\r\\n    uint256 public constant MINIMUM_FUND = 5 * 1e18;\\r\\n    using PriceConverter for uint256;\\r\\n\\r\\n    AggregatorV3Interface public priceFeed;\\r\\n\\r\\n    address public immutable i_Owner;\\r\\n\\r\\n    constructor(address priceFeedAddress) {\\r\\n        i_Owner = msg.sender;\\r\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    address[] public funders;\\r\\n    mapping(address => uint256) public addressToAmountFunded;\\r\\n\\r\\n    function fund() public payable {\\r\\n        // require(convertToDollars(msg.value) > MINIMUM_FUND, \\\"Didn't send enough funds.\\\");\\r\\n        require(\\r\\n            msg.value.convertToDollars(priceFeed) > MINIMUM_FUND,\\r\\n            \\\"Not enough funds\\\"\\r\\n        );\\r\\n        funders.push(msg.sender);\\r\\n        addressToAmountFunded[msg.sender] = msg.value;\\r\\n    }\\r\\n\\r\\n    function Withdraw() public admin {\\r\\n        // reset funders mapping\\r\\n        for (\\r\\n            uint256 funderIndex = 0;\\r\\n            funderIndex > funders.length;\\r\\n            funderIndex++\\r\\n        ) {\\r\\n            address funder = funders[funderIndex];\\r\\n            addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        // reset funders array\\r\\n        funders = new address[](0);\\r\\n        // send funds to another address\\r\\n        // funds can only be sent to payable address types\\r\\n        // Three means of sending funds:\\r\\n        // // > transfer\\r\\n        // payable(msg.sender).transfer(address(this).balance);\\r\\n        // // > send\\r\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\r\\n        // require(sendSuccess, \\\"Send failed\\\");\\r\\n        // > call\\r\\n        (bool callSuccess, ) = payable(msg.sender).call{\\r\\n            value: address(this).balance\\r\\n        }(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed\\\");\\r\\n    }\\r\\n\\r\\n    modifier admin() {\\r\\n        // require(msg.sender == i_Owner, \\\"Administrator only\\\");\\r\\n        if (msg.sender != i_Owner) {\\r\\n            revert NotOwner();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x7b4941a2fa181e216c66f4736d064cc792f8d7910ddda6b35af2733ee64c7034\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getEthInDollars(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        // interact with the ORACLE to get latest market eth value in dollars\\r\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\r\\n        //     0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\r\\n        // );\\r\\n        (, int256 ethValueInDollars, , , ) = priceFeed.latestRoundData();\\r\\n\\r\\n        return uint256(ethValueInDollars * 1e10);\\r\\n    }\\r\\n\\r\\n    function convertToDollars(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethInDol = getEthInDollars(priceFeed);\\r\\n        return (ethAmount * ethInDol) / 1e18;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x9dfb1eb4691d005412ebb80f29aed256e920b4305485d830621e270efae7ed3b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f55380380610f558339818101604052810190610032919061010f565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dc826100b1565b9050919050565b6100ec816100d1565b81146100f757600080fd5b50565b600081519050610109816100e3565b92915050565b600060208284031215610125576101246100ac565b5b6000610133848285016100fa565b91505092915050565b608051610df761015e600039600081816102e301526105930152610df76000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a14610107578063b60d428814610132578063dc0d3dff1461013c578063e667b0bf1461017957610083565b80633e47d6f31461008857806357ea89b6146100c55780635deb0172146100dc57610083565b36610083576100816101a4565b005b600080fd5b34801561009457600080fd5b506100af60048036038101906100aa9190610786565b6102c9565b6040516100bc91906107cc565b60405180910390f35b3480156100d157600080fd5b506100da6102e1565b005b3480156100e857600080fd5b506100f1610522565b6040516100fe91906107cc565b60405180910390f35b34801561011357600080fd5b5061011c61052e565b6040516101299190610846565b60405180910390f35b61013a6101a4565b005b34801561014857600080fd5b50610163600480360381019061015e919061088d565b610552565b60405161017091906108c9565b60405180910390f35b34801561018557600080fd5b5061018e610591565b60405161019b91906108c9565b60405180910390f35b674563918244f400006101e060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105b590919063ffffffff16565b11610220576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021790610941565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60026020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610366576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508111156104125760006001828154811061038c5761038b610961565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040a906109bf565b915050610369565b50600067ffffffffffffffff81111561042e5761042d610a07565b5b60405190808252806020026020018201604052801561045c5781602001602082028036833780820191505090505b506001908051906020019061047292919061067c565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049990610a67565b60006040518083038185875af1925050503d80600081146104d6576040519150601f19603f3d011682016040523d82523d6000602084013e6104db565b606091505b505090508061051f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051690610ac8565b60405180910390fd5b50565b674563918244f4000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061056257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806105c1836105eb565b9050670de0b6b3a764000081856105d89190610ae8565b6105e29190610b71565b91505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065d9190610c2f565b5050509150506402540be400816106749190610caa565b915050919050565b8280548282559060005260206000209081019282156106f5579160200282015b828111156106f45782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061069c565b5b5090506107029190610706565b5090565b5b8082111561071f576000816000905550600101610707565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061075382610728565b9050919050565b61076381610748565b811461076e57600080fd5b50565b6000813590506107808161075a565b92915050565b60006020828403121561079c5761079b610723565b5b60006107aa84828501610771565b91505092915050565b6000819050919050565b6107c6816107b3565b82525050565b60006020820190506107e160008301846107bd565b92915050565b6000819050919050565b600061080c61080761080284610728565b6107e7565b610728565b9050919050565b600061081e826107f1565b9050919050565b600061083082610813565b9050919050565b61084081610825565b82525050565b600060208201905061085b6000830184610837565b92915050565b61086a816107b3565b811461087557600080fd5b50565b60008135905061088781610861565b92915050565b6000602082840312156108a3576108a2610723565b5b60006108b184828501610878565b91505092915050565b6108c381610748565b82525050565b60006020820190506108de60008301846108ba565b92915050565b600082825260208201905092915050565b7f4e6f7420656e6f7567682066756e647300000000000000000000000000000000600082015250565b600061092b6010836108e4565b9150610936826108f5565b602082019050919050565b6000602082019050818103600083015261095a8161091e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ca826107b3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109fc576109fb610990565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a51600083610a36565b9150610a5c82610a41565b600082019050919050565b6000610a7282610a44565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ab2600b836108e4565b9150610abd82610a7c565b602082019050919050565b60006020820190508181036000830152610ae181610aa5565b9050919050565b6000610af3826107b3565b9150610afe836107b3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b3757610b36610990565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b7c826107b3565b9150610b87836107b3565b925082610b9757610b96610b42565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bc181610ba2565b8114610bcc57600080fd5b50565b600081519050610bde81610bb8565b92915050565b6000819050919050565b610bf781610be4565b8114610c0257600080fd5b50565b600081519050610c1481610bee565b92915050565b600081519050610c2981610861565b92915050565b600080600080600060a08688031215610c4b57610c4a610723565b5b6000610c5988828901610bcf565b9550506020610c6a88828901610c05565b9450506040610c7b88828901610c1a565b9350506060610c8c88828901610c1a565b9250506080610c9d88828901610bcf565b9150509295509295909350565b6000610cb582610be4565b9150610cc083610be4565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610cff57610cfe610990565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d3c57610d3b610990565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d7957610d78610990565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610db657610db5610990565b5b82820290509291505056fea26469706673582212207583be3f006bd80ce29cb85c8308ce2e699119719cbaec652f467aa51d0871c964736f6c634300080f0033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a14610107578063b60d428814610132578063dc0d3dff1461013c578063e667b0bf1461017957610083565b80633e47d6f31461008857806357ea89b6146100c55780635deb0172146100dc57610083565b36610083576100816101a4565b005b600080fd5b34801561009457600080fd5b506100af60048036038101906100aa9190610786565b6102c9565b6040516100bc91906107cc565b60405180910390f35b3480156100d157600080fd5b506100da6102e1565b005b3480156100e857600080fd5b506100f1610522565b6040516100fe91906107cc565b60405180910390f35b34801561011357600080fd5b5061011c61052e565b6040516101299190610846565b60405180910390f35b61013a6101a4565b005b34801561014857600080fd5b50610163600480360381019061015e919061088d565b610552565b60405161017091906108c9565b60405180910390f35b34801561018557600080fd5b5061018e610591565b60405161019b91906108c9565b60405180910390f35b674563918244f400006101e060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105b590919063ffffffff16565b11610220576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021790610941565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60026020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610366576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508111156104125760006001828154811061038c5761038b610961565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040a906109bf565b915050610369565b50600067ffffffffffffffff81111561042e5761042d610a07565b5b60405190808252806020026020018201604052801561045c5781602001602082028036833780820191505090505b506001908051906020019061047292919061067c565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049990610a67565b60006040518083038185875af1925050503d80600081146104d6576040519150601f19603f3d011682016040523d82523d6000602084013e6104db565b606091505b505090508061051f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051690610ac8565b60405180910390fd5b50565b674563918244f4000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061056257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806105c1836105eb565b9050670de0b6b3a764000081856105d89190610ae8565b6105e29190610b71565b91505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065d9190610c2f565b5050509150506402540be400816106749190610caa565b915050919050565b8280548282559060005260206000209081019282156106f5579160200282015b828111156106f45782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061069c565b5b5090506107029190610706565b5090565b5b8082111561071f576000816000905550600101610707565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061075382610728565b9050919050565b61076381610748565b811461076e57600080fd5b50565b6000813590506107808161075a565b92915050565b60006020828403121561079c5761079b610723565b5b60006107aa84828501610771565b91505092915050565b6000819050919050565b6107c6816107b3565b82525050565b60006020820190506107e160008301846107bd565b92915050565b6000819050919050565b600061080c61080761080284610728565b6107e7565b610728565b9050919050565b600061081e826107f1565b9050919050565b600061083082610813565b9050919050565b61084081610825565b82525050565b600060208201905061085b6000830184610837565b92915050565b61086a816107b3565b811461087557600080fd5b50565b60008135905061088781610861565b92915050565b6000602082840312156108a3576108a2610723565b5b60006108b184828501610878565b91505092915050565b6108c381610748565b82525050565b60006020820190506108de60008301846108ba565b92915050565b600082825260208201905092915050565b7f4e6f7420656e6f7567682066756e647300000000000000000000000000000000600082015250565b600061092b6010836108e4565b9150610936826108f5565b602082019050919050565b6000602082019050818103600083015261095a8161091e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ca826107b3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109fc576109fb610990565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a51600083610a36565b9150610a5c82610a41565b600082019050919050565b6000610a7282610a44565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ab2600b836108e4565b9150610abd82610a7c565b602082019050919050565b60006020820190508181036000830152610ae181610aa5565b9050919050565b6000610af3826107b3565b9150610afe836107b3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b3757610b36610990565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b7c826107b3565b9150610b87836107b3565b925082610b9757610b96610b42565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bc181610ba2565b8114610bcc57600080fd5b50565b600081519050610bde81610bb8565b92915050565b6000819050919050565b610bf781610be4565b8114610c0257600080fd5b50565b600081519050610c1481610bee565b92915050565b600081519050610c2981610861565b92915050565b600080600080600060a08688031215610c4b57610c4a610723565b5b6000610c5988828901610bcf565b9550506020610c6a88828901610c05565b9450506040610c7b88828901610c1a565b9350506060610c8c88828901610c1a565b9250506080610c9d88828901610bcf565b9150509295509295909350565b6000610cb582610be4565b9150610cc083610be4565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610cff57610cfe610990565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d3c57610d3b610990565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d7957610d78610990565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610db657610db5610990565b5b82820290509291505056fea26469706673582212207583be3f006bd80ce29cb85c8308ce2e699119719cbaec652f467aa51d0871c964736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 83,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 87,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}